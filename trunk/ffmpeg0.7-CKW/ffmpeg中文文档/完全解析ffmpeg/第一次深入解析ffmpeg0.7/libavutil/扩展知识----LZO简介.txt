LZO 是致力于解压速度的一种数据压缩算法，LZO 是 Lempel-Ziv-Oberhumer 的缩写。这个算法是无损算法，参考实现程序是线程安全的。
　　实现它的一个自由软件工具是lzop。最初的库是用 ANSI C 编写、并且遵从 GNU通用公共许可证发布的。现在 LZO 有用于 Perl、Python 以及 Java 的各种版本。代码版权的所有者是 Markus F. X. J. Oberhumer。
　　LZO 库实现了许多有下述特点的算法：
　　* 解压简单，速度非常快。
　　* 解压不需要内存。
　　* 压缩相当地快。
　　* 压缩需要 64 kB 的内存。
　　* 允许在压缩部分以损失压缩速度为代价提高压缩率，解压速度不会降低。
　　* 包括生成预先压缩数据的压缩级别，这样可以得到相当有竞争力的压缩比。
　　* 另外还有一个只需要 8 kB 内存的压缩级别。
　　* 算法是线程安全的。
　　* 算法是无损的。
　　LZO 支持重复压缩以及原地解压。
　　LZO 是块压缩算法――压缩解压成块的数据。压缩与解压所用块的大小必须一样。
　　LZO 将数据块压缩成匹配数据（滑动字典）与非匹配文字的序列。LZO 对于较长的匹配数据以及较长的非匹配文字序列有专门的处理，这样对于高度冗余的数据能够取得很好的效果，并且对于不可压缩的数据也能得到可以接受的效果。
　　当处理不可压缩数据的时候，LZO 将每个 1024 字节的输入数据块扩展 16 字节。
　　据报道 LZO 也在 AIX、 ConvexOS、IRIX、Mac OS、Palm OS、 PS1（PlayStation）、Solaris、SunOS、TOS (Atari ST) 以及 VxWorks 上得到实现。